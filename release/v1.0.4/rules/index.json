{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "MPLP Rules Framework Index",
  "description": "Comprehensive index of all MPLP rules organized by category and type",
  "version": "1.0.0",
  "rulesFramework": {
    "execution": {
      "description": "Rules governing protocol execution, state management, and error handling",
      "rules": [
        {
          "file": "execution/protocol-execution.json",
          "name": "Protocol Execution Rules",
          "description": "Rules for MPLP protocol execution dependencies, role assignment, and orchestration",
          "ruleCount": 10,
          "categories": ["dependencies", "role_assignment", "testing", "tracing", "learning", "confirmation", "workflow", "parallel_execution", "timeout"]
        },
        {
          "file": "execution/state-transitions.json",
          "name": "State Transition Rules",
          "description": "Rules for MPLP protocol state transitions and lifecycle management",
          "ruleCount": 10,
          "categories": ["lifecycle", "context_states", "plan_states", "execute_states", "role_states", "workflow_states", "delivery_states", "dependencies", "rollback", "persistence"]
        },
        {
          "file": "execution/error-handling.json",
          "name": "Error Handling Rules",
          "description": "Rules for MPLP error handling, recovery, and circuit breaker patterns",
          "ruleCount": 10,
          "categories": ["general_errors", "context_errors", "plan_errors", "execute_errors", "role_errors", "workflow_errors", "delivery_errors", "propagation", "logging", "circuit_breaker"]
        }
      ]
    },
    "validation": {
      "description": "Rules for data validation, schema compliance, and protocol compatibility",
      "rules": [
        {
          "file": "validation/data-validation.json",
          "name": "Data Validation Rules",
          "description": "Rules for MPLP data validation, schema compliance, and consistency checks",
          "ruleCount": 10,
          "categories": ["schema_compliance", "context_validation", "plan_validation", "role_validation", "workflow_validation", "delivery_validation", "consistency", "format_validation", "business_rules", "performance"]
        },
        {
          "file": "validation/protocol-compatibility.json",
          "name": "Protocol Compatibility Rules",
          "description": "Rules for MPLP protocol compatibility, versioning, and schema evolution",
          "ruleCount": 8,
          "categories": ["version_compatibility", "schema_evolution", "cross_protocol", "implementation", "language_binding", "extension", "backward_compatibility", "deprecation"]
        }
      ]
    },
    "integration": {
      "description": "Rules for API integration, system integration, and external service connectivity",
      "rules": [
        {
          "file": "integration/api-integration.json",
          "name": "API Integration Rules",
          "description": "Rules for MPLP API integration, authentication, and data transformation",
          "ruleCount": 8,
          "categories": ["authentication", "rate_limiting", "data_transformation", "error_handling", "webhook", "caching", "versioning", "monitoring"]
        },
        {
          "file": "integration/system-integration.json",
          "name": "System Integration Rules",
          "description": "Rules for MPLP integration with enterprise systems, cloud platforms, and DevOps tools",
          "ruleCount": 6,
          "categories": ["enterprise_systems", "cloud_platforms", "devops_tools", "database_systems", "message_queues", "identity_management"]
        }
      ]
    },
    "business": {
      "description": "Rules for business processes, project governance, and organizational compliance",
      "rules": [
        {
          "file": "business/project-governance.json",
          "name": "Project Governance Rules",
          "description": "Rules for MPLP project governance, compliance, and resource management",
          "ruleCount": 5,
          "categories": ["approval", "compliance", "resource_management", "risk_management", "quality_assurance"]
        },
        {
          "file": "business/business-processes.json",
          "name": "Business Process Rules",
          "description": "Rules for MPLP business processes, change management, and stakeholder engagement",
          "ruleCount": 3,
          "categories": ["lifecycle_management", "change_management", "stakeholder_engagement"]
        }
      ]
    },
    "quality": {
      "description": "Rules for quality assurance, performance standards, and code quality",
      "rules": [
        {
          "file": "quality/performance-standards.json",
          "name": "Performance Standards Rules",
          "description": "Rules for MPLP performance standards, data quality, and user experience",
          "ruleCount": 3,
          "categories": ["performance_standards", "data_quality", "user_experience"]
        },
        {
          "file": "quality/code-standards.json",
          "name": "Code Standards Rules",
          "description": "Rules for MPLP code quality, formatting standards, and security practices",
          "ruleCount": 3,
          "categories": ["code_style", "complexity_maintainability", "security_reliability"]
        }
      ]
    },
    "security": {
      "description": "Rules for security, access control, data protection, and privacy compliance",
      "rules": [
        {
          "file": "security/access-control.json",
          "name": "Access Control Rules",
          "description": "Rules for MPLP authentication, authorization, and identity management",
          "ruleCount": 3,
          "categories": ["authentication", "authorization", "identity_management"]
        },
        {
          "file": "security/data-protection.json",
          "name": "Data Protection Rules",
          "description": "Rules for MPLP data encryption, privacy protection, and data loss prevention",
          "ruleCount": 3,
          "categories": ["encryption", "privacy", "data_loss_prevention"]
        }
      ]
    }
  },
  "rulesSummary": {
    "totalCategories": 6,
    "totalRuleFiles": 12,
    "totalRules": 75,
    "rulesByCategory": {
      "execution": 30,
      "validation": 18,
      "integration": 14,
      "business": 8,
      "quality": 6,
      "security": 6
    }
  },
  "protocolCoverage": {
    "Context": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json"]
    },
    "Plan": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json"]
    },
    "Confirm": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "business/project-governance.json"]
    },
    "Execute": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json"]
    },
    "Learn": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "quality/performance-standards.json"]
    },
    "Trace": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "security/data-protection.json"]
    },
    "Test": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "quality/code-standards.json"]
    },
    "Role": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json", "security/access-control.json"]
    },
    "Workflow": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json", "business/business-processes.json"]
    },
    "Delivery": {
      "covered": true,
      "ruleFiles": ["execution/protocol-execution.json", "execution/state-transitions.json", "execution/error-handling.json", "validation/data-validation.json", "business/project-governance.json"]
    }
  },
  "usage": {
    "ruleEngine": {
      "description": "Rules can be loaded and executed by MPLP-compliant rule engines",
      "implementation": "Each rule file contains executable rules with conditions, actions, and enforcement levels"
    },
    "validation": {
      "description": "Rules provide validation criteria for MPLP protocol implementations",
      "implementation": "Validation rules can be used to verify protocol compliance and data integrity"
    },
    "governance": {
      "description": "Rules establish governance frameworks for MPLP project management",
      "implementation": "Business and quality rules define organizational standards and processes"
    },
    "security": {
      "description": "Rules enforce security and privacy requirements for MPLP implementations",
      "implementation": "Security rules provide comprehensive protection for data and system access"
    }
  },
  "metadata": {
    "version": "1.0.0",
    "author": "MPLP Development Team",
    "createdAt": "2025-06-28T11:34:54Z",
    "updatedAt": "2025-06-28T11:34:54Z",
    "license": "MIT",
    "repository": "https://github.com/coregentis/MPLP-rules-framework"
  }
}