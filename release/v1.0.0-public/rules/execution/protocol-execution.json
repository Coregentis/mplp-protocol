{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "MPLP Protocol Execution Rules",
  "description": "Rules governing the execution order, dependencies, and coordination of MPLP protocols",
  "version": "1.0.0",
  "rules": [
    {
      "ruleId": "EXEC-001",
      "name": "Context First Execution",
      "category": "execution",
      "scope": "global",
      "priority": "high",
      "description": "Context protocol must be executed before any other protocol",
      "conditions": {
        "when": "protocol_execution_starts",
        "context": "any_protocol != 'Context'"
      },
      "actions": {
        "then": "ensure_context_protocol_executed_first",
        "else": "proceed_with_execution"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-002",
      "name": "Plan Before Execute",
      "category": "execution",
      "scope": "global",
      "priority": "high",
      "description": "Plan protocol must be completed before Execute protocol",
      "conditions": {
        "when": "execute_protocol_starts",
        "context": "plan_protocol_status != 'completed'"
      },
      "actions": {
        "then": "block_execution_until_plan_complete",
        "else": "allow_execution"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-003",
      "name": "Role Assignment Before Workflow",
      "category": "execution",
      "scope": "workflow",
      "priority": "high",
      "description": "Role protocol must assign roles before Workflow execution",
      "conditions": {
        "when": "workflow_protocol_starts",
        "context": "required_roles_not_assigned"
      },
      "actions": {
        "then": "trigger_role_assignment",
        "else": "proceed_with_workflow"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-004",
      "name": "Test After Execute",
      "category": "execution",
      "scope": "global",
      "priority": "medium",
      "description": "Test protocol should be executed after Execute protocol completion",
      "conditions": {
        "when": "execute_protocol_completes",
        "context": "testing_required = true"
      },
      "actions": {
        "then": "trigger_test_protocol",
        "else": "skip_testing"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-005",
      "name": "Trace Throughout Lifecycle",
      "category": "execution",
      "scope": "global",
      "priority": "medium",
      "description": "Trace protocol should run continuously throughout the project lifecycle",
      "conditions": {
        "when": "any_protocol_executes",
        "context": "tracing_enabled = true"
      },
      "actions": {
        "then": "ensure_trace_protocol_active",
        "else": "continue_without_tracing"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-006",
      "name": "Learn After Completion",
      "category": "execution",
      "scope": "global",
      "priority": "medium",
      "description": "Learn protocol should be triggered after major protocol completions",
      "conditions": {
        "when": "major_protocol_completes",
        "context": "learning_enabled = true"
      },
      "actions": {
        "then": "trigger_learn_protocol",
        "else": "skip_learning"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-007",
      "name": "Confirm Before Delivery",
      "category": "execution",
      "scope": "delivery",
      "priority": "high",
      "description": "Confirm protocol must validate deliverables before Delivery protocol execution",
      "conditions": {
        "when": "delivery_protocol_starts",
        "context": "deliverables_not_confirmed"
      },
      "actions": {
        "then": "trigger_confirm_protocol",
        "else": "proceed_with_delivery"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-008",
      "name": "Workflow Orchestration",
      "category": "execution",
      "scope": "workflow",
      "priority": "high",
      "description": "Workflow protocol should orchestrate the execution of other protocols",
      "conditions": {
        "when": "complex_multi_protocol_execution_required",
        "context": "workflow_defined = true"
      },
      "actions": {
        "then": "use_workflow_protocol_for_orchestration",
        "else": "use_default_execution_order"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-009",
      "name": "Parallel Execution Constraints",
      "category": "execution",
      "scope": "global",
      "priority": "medium",
      "description": "Define which protocols can execute in parallel safely",
      "conditions": {
        "when": "parallel_execution_requested",
        "context": "protocols_are_independent"
      },
      "actions": {
        "then": "allow_parallel_execution",
        "else": "enforce_sequential_execution"
      },
      "enforcement": "mandatory",
      "parallelSafeProtocols": ["Trace", "Learn"],
      "sequentialRequiredProtocols": ["Context", "Plan", "Execute", "Test", "Confirm", "Delivery"],
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "EXEC-010",
      "name": "Protocol Timeout Management",
      "category": "execution",
      "scope": "global",
      "priority": "medium",
      "description": "Define timeout rules for protocol execution",
      "conditions": {
        "when": "protocol_execution_time_exceeds_threshold",
        "context": "timeout_management_enabled = true"
      },
      "actions": {
        "then": "trigger_timeout_handling",
        "else": "continue_execution"
      },
      "enforcement": "recommended",
      "timeoutThresholds": {
        "Context": 300,
        "Plan": 1800,
        "Execute": 3600,
        "Test": 1200,
        "Learn": 600,
        "Trace": 60,
        "Confirm": 300,
        "Role": 180,
        "Workflow": 7200,
        "Delivery": 900
      },
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    }
  ]
}