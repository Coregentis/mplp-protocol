{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "MPLP Access Control Security Rules",
  "description": "Security rules defining access control, authentication, authorization, and identity management for MPLP protocols",
  "version": "1.0.0",
  "accessControlRules": [
    {
      "ruleId": "SEC-001",
      "name": "Authentication and Identity Verification",
      "category": "authentication",
      "scope": "global",
      "priority": "critical",
      "description": "Rules for user authentication, identity verification, and credential management in MPLP systems",
      "authenticationRequirements": {
        "userAuthentication": {
          "methods": {
            "primary": [
              "multi_factor_authentication",
              "oauth_2_0_with_pkce",
              "saml_2_0",
              "openid_connect"
            ],
            "secondary": [
              "api_keys_with_rotation",
              "jwt_tokens_with_short_expiry",
              "certificate_based_authentication"
            ],
            "deprecated": [
              "basic_authentication",
              "plain_text_passwords",
              "single_factor_authentication"
            ]
          },
          "passwordPolicies": {
            "minimumLength": 12,
            "complexity": {
              "uppercase": "required",
              "lowercase": "required",
              "numbers": "required",
              "specialCharacters": "required",
              "commonPasswords": "prohibited",
              "personalInformation": "prohibited"
            },
            "rotation": {
              "frequency": "every_90_days",
              "historyCheck": "last_12_passwords",
              "forceChange": "on_security_incident"
            },
            "storage": {
              "hashing": "bcrypt_with_minimum_12_rounds",
              "salting": "unique_salt_per_password",
              "encryption": "aes_256_for_additional_protection"
            }
          },
          "multiFactorAuthentication": {
            "required": [
              "administrative_access",
              "sensitive_data_access",
              "production_environment_access",
              "financial_operations"
            ],
            "methods": [
              "totp_authenticator_apps",
              "hardware_security_keys",
              "sms_as_fallback_only",
              "biometric_authentication"
            ],
            "backup": {
              "recoveryCodes": "provide_one_time_recovery_codes",
              "alternativeMethods": "multiple_backup_authentication_methods",
              "adminOverride": "secure_admin_override_process"
            }
          }
        },
        "serviceAuthentication": {
          "serviceToService": {
            "methods": [
              "mutual_tls_authentication",
              "jwt_with_asymmetric_keys",
              "oauth_2_0_client_credentials",
              "api_keys_with_scoped_permissions"
            ],
            "keyManagement": {
              "rotation": "automatic_key_rotation_every_30_days",
              "storage": "hardware_security_modules_or_key_vaults",
              "distribution": "secure_key_distribution_mechanisms",
              "revocation": "immediate_key_revocation_capability"
            }
          },
          "apiAuthentication": {
            "rateLimiting": {
              "perUser": "1000_requests_per_hour",
              "perIP": "10000_requests_per_hour",
              "perAPI": "configurable_based_on_api_criticality",
              "burstLimiting": "prevent_burst_attacks"
            },
            "tokenManagement": {
              "expiry": "short_lived_tokens_maximum_1_hour",
              "refresh": "secure_token_refresh_mechanism",
              "revocation": "immediate_token_revocation",
              "scope": "principle_of_least_privilege"
            }
          }
        },
        "sessionManagement": {
          "sessionSecurity": {
            "generation": "cryptographically_secure_session_ids",
            "storage": "secure_session_storage_mechanisms",
            "transmission": "encrypted_session_transmission",
            "invalidation": "secure_session_invalidation"
          },
          "sessionLifecycle": {
            "timeout": {
              "idle": "30_minutes_idle_timeout",
              "absolute": "8_hours_absolute_timeout",
              "sensitive": "15_minutes_for_sensitive_operations"
            },
            "renewal": {
              "automatic": "automatic_session_renewal_for_active_users",
              "reauthentication": "require_reauthentication_for_sensitive_operations",
              "notification": "notify_users_of_session_expiry"
            }
          }
        }
      },
      "conditions": {
        "when": "user_or_service_authentication_required",
        "context": "all_system_access_and_api_interactions"
      },
      "actions": {
        "then": "enforce_authentication_and_identity_verification",
        "onSuccess": "grant_authenticated_access",
        "onFailure": "deny_access_and_log_security_event"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Security Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "SEC-002",
      "name": "Authorization and Access Control",
      "category": "authorization",
      "scope": "global",
      "priority": "critical",
      "description": "Rules for authorization, role-based access control, and resource protection in MPLP systems",
      "authorizationModel": {
        "roleBasedAccessControl": {
          "roles": {
            "systemAdministrator": {
              "permissions": [
                "full_system_access",
                "user_management",
                "system_configuration",
                "security_settings",
                "audit_log_access"
              ],
              "restrictions": [
                "require_dual_approval_for_critical_changes",
                "enhanced_logging_and_monitoring",
                "regular_access_review"
              ]
            },
            "projectManager": {
              "permissions": [
                "project_creation_and_management",
                "team_member_assignment",
                "resource_allocation",
                "project_reporting",
                "workflow_configuration"
              ],
              "restrictions": [
                "limited_to_assigned_projects",
                "cannot_modify_system_settings",
                "require_approval_for_budget_changes"
              ]
            },
            "developer": {
              "permissions": [
                "code_development",
                "testing_execution",
                "deployment_to_development_environment",
                "access_to_development_tools",
                "read_access_to_project_documentation"
              ],
              "restrictions": [
                "no_production_access_without_approval",
                "limited_to_assigned_projects_and_modules",
                "cannot_modify_security_configurations"
              ]
            },
            "tester": {
              "permissions": [
                "test_execution",
                "test_result_reporting",
                "access_to_test_environments",
                "defect_reporting",
                "test_data_management"
              ],
              "restrictions": [
                "read_only_access_to_production_data",
                "cannot_modify_application_code",
                "limited_to_assigned_test_projects"
              ]
            },
            "auditor": {
              "permissions": [
                "read_only_access_to_audit_logs",
                "compliance_reporting",
                "security_assessment",
                "access_to_system_documentation",
                "risk_assessment_tools"
              ],
              "restrictions": [
                "no_modification_permissions",
                "time_limited_access",
                "enhanced_activity_logging"
              ]
            },
            "viewer": {
              "permissions": [
                "read_only_access_to_assigned_projects",
                "view_project_reports",
                "access_to_public_documentation"
              ],
              "restrictions": [
                "no_modification_permissions",
                "limited_to_explicitly_granted_resources",
                "time_limited_access_sessions"
              ]
            }
          },
          "roleAssignment": {
            "principles": [
              "principle_of_least_privilege",
              "separation_of_duties",
              "need_to_know_basis",
              "time_limited_assignments"
            ],
            "process": {
              "approval": "require_manager_approval_for_role_assignment",
              "review": "quarterly_access_review",
              "documentation": "document_business_justification",
              "monitoring": "continuous_access_monitoring"
            }
          }
        },
        "attributeBasedAccessControl": {
          "attributes": {
            "user": [
              "department",
              "clearance_level",
              "employment_status",
              "location",
              "time_of_access"
            ],
            "resource": [
              "classification_level",
              "data_sensitivity",
              "project_association",
              "geographic_restrictions",
              "time_restrictions"
            ],
            "environment": [
              "network_location",
              "device_trust_level",
              "security_context",
              "risk_assessment",
              "compliance_requirements"
            ]
          },
          "policies": {
            "dataClassification": {
              "public": "no_access_restrictions",
              "internal": "require_employee_authentication",
              "confidential": "require_role_based_authorization",
              "restricted": "require_special_approval_and_enhanced_logging",
              "top_secret": "require_highest_clearance_and_dual_approval"
            },
            "contextualAccess": {
              "location": "restrict_access_based_on_geographic_location",
              "time": "enforce_business_hours_access_restrictions",
              "device": "require_managed_and_compliant_devices",
              "network": "restrict_access_from_untrusted_networks"
            }
          }
        },
        "resourceProtection": {
          "protocolAccess": {
            "Context": {
              "read": "require_project_member_role",
              "write": "require_project_manager_or_developer_role",
              "delete": "require_project_manager_role_and_approval"
            },
            "Plan": {
              "read": "require_project_member_role",
              "write": "require_project_manager_or_senior_developer_role",
              "approve": "require_project_manager_role"
            },
            "Execute": {
              "read": "require_project_member_role",
              "trigger": "require_developer_role_and_environment_access",
              "stop": "require_project_manager_or_senior_developer_role"
            },
            "Role": {
              "read": "require_project_member_role",
              "assign": "require_project_manager_role",
              "modify": "require_system_administrator_role"
            },
            "Workflow": {
              "read": "require_project_member_role",
              "configure": "require_project_manager_role",
              "execute": "require_workflow_executor_role"
            },
            "Delivery": {
              "read": "require_project_member_role",
              "create": "require_developer_role",
              "approve": "require_project_manager_or_quality_assurance_role"
            }
          },
          "dataAccess": {
            "personalData": {
              "access": "require_data_protection_training_and_authorization",
              "processing": "require_legal_basis_and_consent",
              "retention": "enforce_data_retention_policies",
              "deletion": "support_right_to_be_forgotten"
            },
            "financialData": {
              "access": "require_financial_clearance_and_dual_approval",
              "modification": "require_segregation_of_duties",
              "reporting": "maintain_audit_trail_for_all_access"
            },
            "intellectualProperty": {
              "access": "require_confidentiality_agreement",
              "sharing": "require_legal_approval_for_external_sharing",
              "protection": "implement_data_loss_prevention_measures"
            }
          }
        }
      },
      "conditions": {
        "when": "resource_access_authorization_required",
        "context": "all_resource_access_and_operation_requests"
      },
      "actions": {
        "then": "enforce_authorization_and_access_control_policies",
        "onSuccess": "grant_authorized_access_to_resources",
        "onFailure": "deny_access_and_log_authorization_failure"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Security Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "SEC-003",
      "name": "Identity and Access Management",
      "category": "identity_management",
      "scope": "global",
      "priority": "high",
      "description": "Rules for identity lifecycle management, access provisioning, and identity governance in MPLP systems",
      "identityLifecycleManagement": {
        "userProvisioning": {
          "onboarding": {
            "process": [
              "identity_verification",
              "background_check_completion",
              "role_assignment_approval",
              "security_training_completion",
              "account_creation_and_activation"
            ],
            "automation": "automated_provisioning_based_on_hr_systems",
            "approval": "require_manager_and_security_team_approval",
            "documentation": "maintain_complete_provisioning_audit_trail"
          },
          "modification": {
            "roleChanges": {
              "approval": "require_manager_approval_for_role_changes",
              "implementation": "immediate_implementation_of_approved_changes",
              "notification": "notify_affected_users_and_stakeholders",
              "review": "review_access_changes_within_24_hours"
            },
            "accessUpdates": {
              "principle": "maintain_principle_of_least_privilege",
              "timing": "implement_access_changes_immediately",
              "verification": "verify_access_changes_are_correctly_applied",
              "rollback": "ability_to_rollback_access_changes_if_needed"
            }
          },
          "deprovisioning": {
            "triggers": [
              "employment_termination",
              "role_change_requiring_access_reduction",
              "extended_leave_of_absence",
              "security_incident_involvement",
              "compliance_violation"
            ],
            "process": [
              "immediate_account_deactivation",
              "access_rights_revocation",
              "data_access_audit",
              "equipment_and_credential_recovery",
              "exit_interview_and_documentation"
            ],
            "timing": {
              "immediate": "security_incidents_and_terminations",
              "scheduled": "planned_role_changes_and_transfers",
              "automated": "system_triggered_based_on_hr_events"
            }
          }
        },
        "accessGovernance": {
          "accessReviews": {
            "frequency": {
              "quarterly": "regular_access_reviews_for_all_users",
              "monthly": "privileged_access_reviews",
              "weekly": "administrative_access_reviews",
              "continuous": "automated_anomaly_detection_and_review"
            },
            "scope": {
              "comprehensive": "review_all_access_rights_and_permissions",
              "riskBased": "prioritize_high_risk_and_privileged_access",
              "roleBased": "review_access_by_role_and_function",
              "resourceBased": "review_access_to_critical_resources"
            },
            "process": {
              "automated": "automated_access_review_workflows",
              "managerReview": "manager_certification_of_team_access",
              "ownerReview": "resource_owner_certification",
              "auditReview": "independent_audit_team_review"
            }
          },
          "accessCertification": {
            "requirements": {
              "managerCertification": "managers_certify_team_member_access_quarterly",
              "selfCertification": "users_certify_their_own_access_annually",
              "ownerCertification": "resource_owners_certify_access_to_their_resources",
              "auditCertification": "independent_audit_certification_annually"
            },
            "consequences": {
              "nonCertification": "automatic_access_suspension_for_non_certified_access",
              "lateCertification": "escalation_to_management_for_late_certifications",
              "falseCertification": "disciplinary_action_for_false_certifications"
            }
          },
          "segregationOfDuties": {
            "principles": {
              "dualControl": "require_dual_approval_for_critical_operations",
              "roleRotation": "rotate_critical_roles_periodically",
              "independentReview": "independent_review_of_critical_decisions",
              "auditTrail": "maintain_complete_audit_trail_for_all_actions"
            },
            "implementation": {
              "systemEnforcement": "system_enforced_segregation_of_duties",
              "processControls": "process_controls_for_manual_operations",
              "monitoring": "continuous_monitoring_for_violations",
              "reporting": "regular_reporting_on_segregation_compliance"
            }
          }
        },
        "privilegedAccessManagement": {
          "privilegedAccounts": {
            "identification": "identify_and_inventory_all_privileged_accounts",
            "protection": "enhanced_protection_for_privileged_accounts",
            "monitoring": "continuous_monitoring_of_privileged_account_activity",
            "rotation": "regular_rotation_of_privileged_account_credentials"
          },
          "justInTimeAccess": {
            "principle": "provide_privileged_access_only_when_needed",
            "duration": "time_limited_privileged_access_sessions",
            "approval": "require_approval_for_privileged_access_requests",
            "monitoring": "enhanced_monitoring_during_privileged_access_sessions"
          },
          "privilegedSessionManagement": {
            "recording": "record_all_privileged_access_sessions",
            "monitoring": "real_time_monitoring_of_privileged_sessions",
            "analysis": "automated_analysis_of_privileged_session_activities",
            "alerting": "immediate_alerting_for_suspicious_privileged_activities"
          }
        }
      },
      "conditions": {
        "when": "identity_and_access_management_operations_required",
        "context": "all_identity_lifecycle_and_access_governance_activities"
      },
      "actions": {
        "then": "enforce_identity_and_access_management_policies",
        "onSuccess": "maintain_secure_and_compliant_identity_management",
        "onFailure": "escalate_identity_management_issues_and_remediate"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Security Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    }
  ]
}