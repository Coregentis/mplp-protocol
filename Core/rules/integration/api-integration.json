{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "MPLP API Integration Rules",
  "description": "Rules for integrating MPLP protocols with external APIs, services, and systems",
  "version": "1.0.0",
  "apiIntegrationRules": [
    {
      "ruleId": "API-001",
      "name": "External API Authentication",
      "category": "authentication",
      "scope": "global",
      "priority": "high",
      "description": "Rules for handling authentication with external APIs",
      "authenticationMethods": {
        "oauth2": {
          "flows": ["authorization_code", "client_credentials", "refresh_token"],
          "tokenStorage": "secure_storage",
          "tokenRefresh": "automatic",
          "scopes": "minimal_required"
        },
        "apiKey": {
          "storage": "environment_variables",
          "rotation": "supported",
          "transmission": "header_preferred"
        },
        "jwt": {
          "validation": "signature_and_expiry",
          "algorithms": ["RS256", "HS256"],
          "clockSkew": "5_minutes"
        },
        "basic": {
          "usage": "development_only",
          "transmission": "https_required"
        }
      },
      "securityRequirements": {
        "encryption": "tls_1_2_minimum",
        "credentialStorage": "encrypted_at_rest",
        "credentialTransmission": "encrypted_in_transit",
        "credentialRotation": "supported"
      },
      "conditions": {
        "when": "external_api_access_required",
        "context": "authentication_enabled"
      },
      "actions": {
        "then": "apply_authentication_method",
        "onFailure": "retry_with_exponential_backoff",
        "onSuccess": "proceed_with_api_call"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-002",
      "name": "Rate Limiting and Throttling",
      "category": "performance",
      "scope": "global",
      "priority": "high",
      "description": "Rules for handling API rate limits and implementing throttling",
      "rateLimitingStrategies": {
        "respectApiLimits": {
          "headerParsing": ["X-RateLimit-Limit", "X-RateLimit-Remaining", "X-RateLimit-Reset"],
          "backoffStrategy": "exponential",
          "maxRetries": 3
        },
        "clientSideThrottling": {
          "requestsPerSecond": "configurable",
          "burstAllowance": "20_percent",
          "queueing": "fifo_with_priority"
        },
        "circuitBreaker": {
          "failureThreshold": 5,
          "timeout": 60,
          "halfOpenRetries": 3
        }
      },
      "responseHandling": {
        "429_status": {
          "action": "respect_retry_after_header",
          "fallback": "exponential_backoff",
          "maxWait": 300
        },
        "503_status": {
          "action": "circuit_breaker_activation",
          "retryAfter": "service_recovery"
        },
        "timeout": {
          "action": "retry_with_increased_timeout",
          "maxTimeout": 120
        }
      },
      "conditions": {
        "when": "external_api_rate_limit_encountered",
        "context": "rate_limiting_enabled"
      },
      "actions": {
        "then": "apply_rate_limiting_strategy",
        "onRateLimit": "implement_backoff_and_retry",
        "onSuccess": "continue_normal_operation"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-003",
      "name": "Data Transformation and Mapping",
      "category": "data",
      "scope": "global",
      "priority": "high",
      "description": "Rules for transforming data between MPLP protocols and external API formats",
      "transformationRules": {
        "inboundTransformation": {
          "dateFormats": "convert_to_iso8601",
          "numberFormats": "preserve_precision",
          "stringEncoding": "ensure_utf8",
          "nullHandling": "convert_to_mplp_null"
        },
        "outboundTransformation": {
          "dateFormats": "convert_to_api_format",
          "numberFormats": "respect_api_precision",
          "stringEncoding": "match_api_encoding",
          "nullHandling": "convert_to_api_null"
        },
        "fieldMapping": {
          "strategy": "configuration_driven",
          "fallback": "best_effort_matching",
          "validation": "post_transformation"
        }
      },
      "mappingConfiguration": {
        "Context": {
          "projectId": "external_project_identifier",
          "stakeholders": "project_members",
          "constraints": "project_limitations"
        },
        "Plan": {
          "tasks": "work_items",
          "timeline": "schedule",
          "resources": "resource_allocation"
        },
        "Execute": {
          "executionResults": "execution_output",
          "artifacts": "deliverables"
        },
        "Role": {
          "agentId": "user_id",
          "capabilities": "skills",
          "availability": "schedule"
        }
      },
      "conditions": {
        "when": "data_transformation_required",
        "context": "external_api_integration"
      },
      "actions": {
        "then": "apply_transformation_rules",
        "onTransformationError": "log_error_and_use_fallback",
        "onSuccess": "proceed_with_transformed_data"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-004",
      "name": "Error Handling and Recovery",
      "category": "error_handling",
      "scope": "global",
      "priority": "high",
      "description": "Rules for handling errors from external API integrations",
      "errorCategories": {
        "client_errors": {
          "4xx_status": {
            "400": "validate_request_and_fix",
            "401": "refresh_authentication",
            "403": "check_permissions_and_escalate",
            "404": "verify_resource_existence",
            "422": "validate_data_format"
          }
        },
        "server_errors": {
          "5xx_status": {
            "500": "retry_with_exponential_backoff",
            "502": "try_alternative_endpoint",
            "503": "activate_circuit_breaker",
            "504": "increase_timeout_and_retry"
          }
        },
        "network_errors": {
          "timeout": "retry_with_increased_timeout",
          "connection_refused": "try_alternative_endpoint",
          "dns_failure": "use_cached_ip_or_fail"
        }
      },
      "recoveryStrategies": {
        "retry": {
          "maxAttempts": 3,
          "backoffStrategy": "exponential",
          "jitter": true
        },
        "fallback": {
          "alternativeEndpoints": "configured_list",
          "cachedData": "use_if_available",
          "degradedMode": "continue_with_limited_functionality"
        },
        "escalation": {
          "notificationThreshold": "3_consecutive_failures",
          "alerting": "immediate",
          "manualIntervention": "after_all_retries_exhausted"
        }
      },
      "conditions": {
        "when": "external_api_error_occurs",
        "context": "error_recovery_enabled"
      },
      "actions": {
        "then": "apply_error_handling_strategy",
        "onRecovery": "resume_normal_operation",
        "onFailure": "escalate_to_manual_intervention"
      },
      "enforcement": "mandatory",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-005",
      "name": "Webhook Integration",
      "category": "webhooks",
      "scope": "global",
      "priority": "medium",
      "description": "Rules for handling webhook integrations with external systems",
      "webhookHandling": {
        "inboundWebhooks": {
          "authentication": "signature_verification",
          "validation": "payload_schema_validation",
          "processing": "asynchronous",
          "acknowledgment": "immediate_200_response"
        },
        "outboundWebhooks": {
          "delivery": "at_least_once",
          "retryPolicy": "exponential_backoff",
          "timeout": 30,
          "maxRetries": 5
        },
        "security": {
          "signatureAlgorithm": "hmac_sha256",
          "timestampValidation": "5_minute_window",
          "ipWhitelisting": "optional"
        }
      },
      "eventTypes": {
        "protocol_state_change": {
          "triggers": ["started", "completed", "failed", "cancelled"],
          "payload": "protocol_state_data"
        },
        "workflow_milestone": {
          "triggers": ["stage_completed", "milestone_reached", "deadline_approaching"],
          "payload": "workflow_progress_data"
        },
        "delivery_status": {
          "triggers": ["deliverable_ready", "delivery_completed", "delivery_rejected"],
          "payload": "delivery_status_data"
        }
      },
      "conditions": {
        "when": "webhook_event_triggered",
        "context": "webhook_integration_enabled"
      },
      "actions": {
        "then": "process_webhook_according_to_rules",
        "onSuccess": "acknowledge_and_continue",
        "onFailure": "retry_or_dead_letter"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-006",
      "name": "Caching and Performance",
      "category": "performance",
      "scope": "global",
      "priority": "medium",
      "description": "Rules for caching external API responses and optimizing performance",
      "cachingStrategies": {
        "responseCache": {
          "ttl": "configurable_per_endpoint",
          "invalidation": "time_based_and_event_driven",
          "storage": "memory_with_disk_overflow"
        },
        "requestDeduplication": {
          "window": "5_seconds",
          "keyGeneration": "url_and_parameters",
          "responseSharing": "enabled"
        },
        "conditionalRequests": {
          "etag": "supported",
          "lastModified": "supported",
          "ifNoneMatch": "automatic"
        }
      },
      "performanceOptimizations": {
        "connectionPooling": {
          "maxConnections": 20,
          "keepAlive": true,
          "timeout": 30
        },
        "compression": {
          "acceptEncoding": ["gzip", "deflate"],
          "requestCompression": "for_large_payloads"
        },
        "batchRequests": {
          "supported": "when_api_allows",
          "batchSize": "configurable",
          "timeout": "extended"
        }
      },
      "conditions": {
        "when": "external_api_performance_optimization_needed",
        "context": "caching_enabled"
      },
      "actions": {
        "then": "apply_caching_and_optimization_strategies",
        "onCacheHit": "return_cached_response",
        "onCacheMiss": "fetch_and_cache_response"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-007",
      "name": "API Versioning and Evolution",
      "category": "versioning",
      "scope": "global",
      "priority": "medium",
      "description": "Rules for handling API versioning and evolution of external integrations",
      "versioningStrategies": {
        "urlVersioning": {
          "pattern": "/v{version}/",
          "negotiation": "explicit"
        },
        "headerVersioning": {
          "header": "API-Version",
          "negotiation": "content_negotiation"
        },
        "parameterVersioning": {
          "parameter": "version",
          "negotiation": "query_parameter"
        }
      },
      "compatibilityHandling": {
        "backwardCompatibility": {
          "support": "2_major_versions",
          "deprecationNotice": "6_months"
        },
        "forwardCompatibility": {
          "unknownFields": "ignore",
          "newFields": "optional_adoption"
        },
        "migration": {
          "automaticUpgrade": "when_safe",
          "manualUpgrade": "for_breaking_changes"
        }
      },
      "conditions": {
        "when": "api_version_mismatch_detected",
        "context": "api_versioning_enabled"
      },
      "actions": {
        "then": "apply_version_compatibility_rules",
        "onIncompatible": "attempt_migration_or_fallback",
        "onCompatible": "proceed_with_version_adaptation"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    },
    {
      "ruleId": "API-008",
      "name": "Monitoring and Observability",
      "category": "monitoring",
      "scope": "global",
      "priority": "medium",
      "description": "Rules for monitoring external API integrations and maintaining observability",
      "monitoringMetrics": {
        "responseTime": {
          "measurement": "end_to_end",
          "percentiles": [50, 90, 95, 99],
          "alertThresholds": "configurable"
        },
        "errorRate": {
          "calculation": "errors_per_total_requests",
          "timeWindow": "5_minutes",
          "alertThreshold": "5_percent"
        },
        "throughput": {
          "measurement": "requests_per_second",
          "aggregation": "average_and_peak"
        },
        "availability": {
          "calculation": "successful_requests_percentage",
          "sla": "99.9_percent"
        }
      },
      "logging": {
        "requestLogging": {
          "level": "info",
          "includeHeaders": "sanitized",
          "includeBody": "configurable"
        },
        "responseLogging": {
          "level": "info",
          "includeHeaders": "relevant_only",
          "includeBody": "on_error"
        },
        "errorLogging": {
          "level": "error",
          "includeStackTrace": true,
          "includeContext": true
        }
      },
      "conditions": {
        "when": "api_monitoring_enabled",
        "context": "observability_required"
      },
      "actions": {
        "then": "collect_monitoring_data",
        "onThresholdBreach": "trigger_alert",
        "onNormal": "continue_monitoring"
      },
      "enforcement": "recommended",
      "metadata": {
        "version": "1.0.0",
        "author": "MPLP Core Team",
        "createdAt": "2025-06-28T11:34:54Z",
        "updatedAt": "2025-06-28T11:34:54Z"
      }
    }
  ]
}