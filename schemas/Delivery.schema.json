{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://coregentis.org/schemas/v1.0/Delivery.schema.json",
  "version": "1.0.0",
  "title": "MPLP.Delivery Schema",
  "description": "Schema for defining deliverable management, output request management, and cross-project dependency coordination in multi-agent systems.",
  "type": "object",
  "properties": {
    "deliveryId": {
      "type": "string",
      "description": "Unique identifier for the delivery instance."
    },
    "deliveryName": {
      "type": "string",
      "description": "Human-readable name of the delivery."
    },
    "deliveryType": {
      "type": "string",
      "enum": ["internal", "external", "milestone", "final", "intermediate"],
      "description": "Type of delivery based on scope and audience."
    },
    "status": {
      "type": "string",
      "enum": ["planned", "in_progress", "ready", "delivered", "accepted", "rejected"],
      "description": "Current status of the delivery."
    },
    "deliverables": {
      "type": "array",
      "description": "List of deliverable items in this delivery.",
      "items": {
        "type": "object",
        "properties": {
          "deliverableId": {
            "type": "string",
            "description": "Unique identifier for the deliverable."
          },
          "name": {
            "type": "string",
            "description": "Name of the deliverable."
          },
          "type": {
            "type": "string",
            "enum": ["document", "code", "data", "model", "report", "artifact", "service"],
            "description": "Type of deliverable."
          },
          "format": {
            "type": "string",
            "description": "Format or file type of the deliverable."
          },
          "location": {
            "type": "object",
            "description": "Location information for the deliverable.",
            "properties": {
              "path": {
                "type": "string",
                "description": "File path or URL to the deliverable."
              },
              "repository": {
                "type": "string",
                "description": "Repository or storage system containing the deliverable."
              },
              "version": {
                "type": "string",
                "description": "Version identifier of the deliverable."
              }
            }
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the deliverable.",
            "properties": {
              "size": {
                "type": "integer",
                "description": "Size of the deliverable in bytes."
              },
              "checksum": {
                "type": "string",
                "description": "Checksum for integrity verification."
              },
              "tags": {
                "type": "array",
                "description": "Tags for categorizing the deliverable.",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "qualityMetrics": {
            "type": "object",
            "description": "Quality metrics for the deliverable.",
            "properties": {
              "completeness": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "description": "Completeness percentage of the deliverable."
              },
              "accuracy": {
                "type": "number",
                "minimum": 0,
                "maximum": 100,
                "description": "Accuracy percentage of the deliverable."
              },
              "compliance": {
                "type": "boolean",
                "description": "Whether the deliverable meets compliance requirements."
              }
            }
          },
          "dependencies": {
            "type": "array",
            "description": "Dependencies required for this deliverable.",
            "items": {
              "type": "object",
              "properties": {
                "dependencyId": {
                  "type": "string",
                  "description": "Identifier of the dependency."
                },
                "type": {
                  "type": "string",
                  "enum": ["input_data", "external_service", "other_deliverable", "resource"],
                  "description": "Type of dependency."
                },
                "source": {
                  "type": "string",
                  "description": "Source of the dependency."
                },
                "status": {
                  "type": "string",
                  "enum": ["pending", "available", "unavailable"],
                  "description": "Status of the dependency."
                }
              },
              "required": ["dependencyId", "type", "source"]
            }
          },
          "status": {
            "type": "string",
            "enum": ["planned", "in_progress", "completed", "validated", "delivered"],
            "description": "Current status of the deliverable."
          }
        },
        "required": ["deliverableId", "name", "type", "status"]
      }
    },
    "outputRequests": {
      "type": "array",
      "description": "Output requests from other projects or systems.",
      "items": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Unique identifier for the output request."
          },
          "requestor": {
            "type": "object",
            "description": "Information about the requestor.",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "Project ID of the requestor."
              },
              "agentId": {
                "type": "string",
                "description": "Agent ID of the requestor."
              },
              "contact": {
                "type": "string",
                "description": "Contact information of the requestor."
              }
            },
            "required": ["projectId"]
          },
          "requestedOutput": {
            "type": "object",
            "description": "Details of the requested output.",
            "properties": {
              "outputType": {
                "type": "string",
                "enum": ["data", "model", "service", "report", "artifact"],
                "description": "Type of output requested."
              },
              "specifications": {
                "type": "object",
                "description": "Detailed specifications for the output.",
                "properties": {
                  "format": {
                    "type": "string",
                    "description": "Required format of the output."
                  },
                  "schema": {
                    "type": "string",
                    "description": "Schema or structure requirements."
                  },
                  "qualityRequirements": {
                    "type": "object",
                    "description": "Quality requirements for the output.",
                    "properties": {
                      "accuracy": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "Required accuracy percentage."
                      },
                      "completeness": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 100,
                        "description": "Required completeness percentage."
                      }
                    }
                  }
                }
              },
              "deliveryMethod": {
                "type": "string",
                "enum": ["push", "pull", "api", "file_transfer", "streaming"],
                "description": "Method for delivering the output."
              }
            },
            "required": ["outputType", "deliveryMethod"]
          },
          "timeline": {
            "type": "object",
            "description": "Timeline requirements for the request.",
            "properties": {
              "requestedDate": {
                "type": "string",
                "format": "date-time",
                "description": "When the output is requested."
              },
              "deadline": {
                "type": "string",
                "format": "date-time",
                "description": "Deadline for delivering the output."
              },
              "priority": {
                "type": "string",
                "enum": ["low", "medium", "high", "critical"],
                "description": "Priority level of the request."
              }
            }
          },
          "status": {
            "type": "string",
            "enum": ["received", "acknowledged", "in_progress", "completed", "delivered", "rejected"],
            "description": "Current status of the output request."
          }
        },
        "required": ["requestId", "requestor", "requestedOutput", "status"]
      }
    },
    "crossProjectDependencies": {
      "type": "array",
      "description": "Dependencies on deliverables from other projects.",
      "items": {
        "type": "object",
        "properties": {
          "dependencyId": {
            "type": "string",
            "description": "Unique identifier for the dependency."
          },
          "sourceProject": {
            "type": "object",
            "description": "Information about the source project.",
            "properties": {
              "projectId": {
                "type": "string",
                "description": "Project ID of the source."
              },
              "projectName": {
                "type": "string",
                "description": "Name of the source project."
              },
              "contact": {
                "type": "string",
                "description": "Contact information for the source project."
              }
            },
            "required": ["projectId"]
          },
          "requiredDeliverable": {
            "type": "object",
            "description": "Details of the required deliverable.",
            "properties": {
              "deliverableId": {
                "type": "string",
                "description": "Identifier of the required deliverable."
              },
              "name": {
                "type": "string",
                "description": "Name of the required deliverable."
              },
              "type": {
                "type": "string",
                "description": "Type of the required deliverable."
              },
              "version": {
                "type": "string",
                "description": "Required version of the deliverable."
              }
            },
            "required": ["deliverableId", "name", "type"]
          },
          "criticality": {
            "type": "string",
            "enum": ["blocking", "high", "medium", "low"],
            "description": "Criticality level of the dependency."
          },
          "expectedAvailability": {
            "type": "string",
            "format": "date-time",
            "description": "Expected availability date of the dependency."
          },
          "status": {
            "type": "string",
            "enum": ["pending", "requested", "confirmed", "available", "delayed", "unavailable"],
            "description": "Current status of the dependency."
          }
        },
        "required": ["dependencyId", "sourceProject", "requiredDeliverable", "criticality", "status"]
      }
    },
    "integrationPoints": {
      "type": "object",
      "description": "Integration points with other MPLP protocols.",
      "properties": {
        "workflowIntegration": {
          "type": "object",
          "description": "Integration with MPLP.Workflow protocol.",
          "properties": {
            "workflowId": {
              "type": "string",
              "description": "Associated workflow identifier."
            },
            "deliveryStages": {
              "type": "array",
              "description": "Workflow stages that involve deliveries.",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "planIntegration": {
          "type": "object",
          "description": "Integration with MPLP.Plan protocol.",
          "properties": {
            "planId": {
              "type": "string",
              "description": "Associated plan identifier."
            },
            "plannedDeliverables": {
              "type": "array",
              "description": "Deliverables defined in the plan.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "deliverySchedule": {
      "type": "object",
      "description": "Schedule for delivery execution.",
      "properties": {
        "plannedStartDate": {
          "type": "string",
          "format": "date-time",
          "description": "Planned start date for delivery preparation."
        },
        "plannedDeliveryDate": {
          "type": "string",
          "format": "date-time",
          "description": "Planned delivery date."
        },
        "actualDeliveryDate": {
          "type": "string",
          "format": "date-time",
          "description": "Actual delivery date."
        },
        "milestones": {
          "type": "array",
          "description": "Key milestones in the delivery process.",
          "items": {
            "type": "object",
            "properties": {
              "milestoneId": {
                "type": "string",
                "description": "Identifier for the milestone."
              },
              "name": {
                "type": "string",
                "description": "Name of the milestone."
              },
              "plannedDate": {
                "type": "string",
                "format": "date-time",
                "description": "Planned date for the milestone."
              },
              "actualDate": {
                "type": "string",
                "format": "date-time",
                "description": "Actual date when the milestone was reached."
              },
              "status": {
                "type": "string",
                "enum": ["pending", "in_progress", "completed", "delayed"],
                "description": "Status of the milestone."
              }
            },
            "required": ["milestoneId", "name", "plannedDate", "status"]
          }
        }
      }
    },
    "createdAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the delivery was created."
    },
    "updatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when the delivery was last updated."
    },
    "version": {
      "type": "string",
      "description": "Version of the delivery definition."
    }
  },
  "required": ["deliveryId", "deliveryName", "deliveryType", "status", "deliverables", "createdAt"],
  "additionalProperties": true
}